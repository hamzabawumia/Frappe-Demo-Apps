This is specifically for desk pages - 
recall that frappe desk pages are created in the <your_app>/page directory 
and that folder contains the page your created as a .js file and a corresponding .json file


I created an app called test_app 
with a doctype called Book with fields: name and author

We will use the same api methods that we used for the portal pages CRUD
I created some whitelisted methods in the api folder - this folder must be at the same directory level as the www folder
The whitelisted methods are located in test_app/api/books.py file

NOW in the .js file we use javascript to insert our html page that we want to render.

frappe.pages['books'].on_page_load = function(wrapper) {
	var page = frappe.ui.make_app_page({
		parent: wrapper,
		title: 'None',
		single_column: true
	});


    $(wrapper).html(`

        <div id="message"></div>

        <div>
            <button hx-get="/api/method/test_app.api.books.new_book_form" hx-target="#book-form">
                New Book
            </button>
        </div>

        <div id="book-form"></div>
        <div id="book-detail"></div>

        <div id="book-list" hx-get="/api/method/test_app.api.books.list_books" 
                hx-trigger="load">
        </div>

        <script src="https://unpkg.com/htmx.org@1.9.2"></script>

        
    `);


}

Since i am using the frappe inbuilt way to access custom api methods - it means you don't have to configure
url in the hooks.py


Access the app in the desk by browsing to the url: http://Your_Domain:8000/app/books

ENSURE TO create that api folder and put in your CRUD controllers there.
you can access the CRUD contollers directly by whitelisting them
e.g. /api/method/<your_app>.api.<controller_file_name>.method

Now everything will work just like we have it in the portal htmx CRUD.
